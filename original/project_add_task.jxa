#!/usr/bin/env osascript -l JavaScript

(function() {
  ObjC.import('stdlib');

  function getCommandLineArguments() {
    const args = [];
    if (typeof $.NSProcessInfo !== "undefined") {
      const nsArgs = $.NSProcessInfo.processInfo.arguments;
      for (let i = 0; i < nsArgs.count; i++) {
        args.push(ObjC.unwrap(nsArgs.objectAtIndex(i)));
      }
      return args.slice(4);
    }
    return args;
  }

  function validateProjectId(projectId) {
    return typeof projectId === "string" && projectId.trim().length > 0;
  }

  function findProjectById(doc, projectId) {
    const topProjects = doc.projects();
    for (const p of topProjects) {
      if (p.id() === projectId) {
        return p;
      }
    }
    function searchFolders(folders) {
      for (const folder of folders) {
        const projects = folder.projects();
        for (const p of projects) {
          if (p.id() === projectId) {
            return p;
          }
        }
        const subfolders = folder.folders();
        const found = searchFolders(subfolders);
        if (found) return found;
      }
      return null;
    }
    return searchFolders(doc.folders());
  }

  const args = getCommandLineArguments();
  const projectID = args[0];
  const taskName = args[1];
  let result = null;

  if (!validateProjectId(projectID) || taskName == null || typeof taskName !== "string" || taskName.trim().length === 0) {
    console.log('Error: Usage: project_add_task.jxa <projectID> <taskName>');
    $.exit(1);
  } else {
    try {
      const app = Application('OmniFocus');
      app.includeStandardAdditions = true;
      const doc = app.defaultDocument;

      const targetProject = findProjectById(doc, projectID);

      if (!targetProject) {
        console.log('Error: Project not found: ' + projectID);
        $.exit(1);
      } else {
        targetProject.tasks.push(app.Task({ name: taskName }));
        $.exit(0);
      }
    } catch (e) {
      console.log('Error: ' + e.message);
      $.exit(1);
    }
  }
  return null;
})();
